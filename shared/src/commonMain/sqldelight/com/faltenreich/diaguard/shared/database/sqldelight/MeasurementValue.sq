CREATE TABLE measurementValue (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    created_at TEXT NOT NULL,
    updated_at TEXT NOT NULL,
    value REAL NOT NULL,
    type_id INTEGER NOT NULL,
    entry_id INTEGER NOT NULL
);

create:
INSERT INTO measurementValue(created_at, updated_at, value, type_id, entry_id)
VALUES (?, ?, ?, ?, ?);

getLastId:
SELECT last_insert_rowid();

getByEntry:
SELECT * FROM measurementValue WHERE entry_id = ?;

getByDateRange:
SELECT * FROM measurementValue
INNER JOIN measurementType ON measurementType.id == measurementValue.type_id
INNER JOIN measurementUnit ON measurementUnit.id == measurementType.selected_unit_id
INNER JOIN measurementProperty ON measurementProperty.id == measurementType.property_id
INNER JOIN entry ON entry.id == measurementValue.entry_id
WHERE entry.date_time >= :startDateTime AND entry.date_time <= :endDateTime ORDER BY entry.date_time;

getLatestByProperty:
SELECT * FROM measurementValue
INNER JOIN measurementType ON measurementType.id == measurementValue.type_id
INNER JOIN measurementUnit ON measurementUnit.id == measurementType.selected_unit_id
INNER JOIN measurementProperty ON measurementProperty.id == measurementType.property_id
INNER JOIN entry ON entry.id == measurementValue.entry_id
WHERE measurementType.property_id == :propertyId
ORDER BY entry.date_time DESC
LIMIT 1;

getPropertyAndDateTime:
SELECT * FROM measurementValue
INNER JOIN measurementType ON measurementType.id == measurementValue.type_id
INNER JOIN measurementUnit ON measurementUnit.id == measurementType.selected_unit_id
INNER JOIN measurementProperty ON measurementProperty.id == measurementType.property_id
INNER JOIN entry ON entry.id == measurementValue.entry_id
WHERE measurementType.property_id == :propertyId
AND entry.date_time >= :minDateTime
AND entry.date_time <= :maxDateTime;

getAverageByProperty:
SELECT AVG(measurementValue.value) FROM measurementValue
INNER JOIN measurementType ON measurementType.id == measurementValue.type_id
INNER JOIN measurementUnit ON measurementUnit.id == measurementType.selected_unit_id
INNER JOIN measurementProperty ON measurementProperty.id == measurementType.property_id
INNER JOIN entry ON entry.id == measurementValue.entry_id
WHERE measurementType.property_id == :propertyId
AND entry.date_time >= :minDateTime
AND entry.date_time <= :maxDateTime;

countByProperty:
SELECT COUNT(*) FROM measurementValue
INNER JOIN measurementType ON measurementType.id == measurementValue.type_id
INNER JOIN measurementProperty ON measurementProperty.id == measurementType.property_id
INNER JOIN entry ON entry.id == measurementValue.entry_id
WHERE measurementType.property_id == :propertyId;

countByType:
SELECT COUNT(*) FROM measurementValue
WHERE type_id == :typeId;

update:
UPDATE measurementValue SET updated_at = ?, value = ? WHERE id = ?;

deleteById:
DELETE FROM measurementValue WHERE id = ?;