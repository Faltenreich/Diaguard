CREATE TABLE MeasurementValue (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    createdAt TEXT NOT NULL,
    updatedAt TEXT NOT NULL,
    value REAL NOT NULL,
    typeId INTEGER NOT NULL,
    entryId INTEGER NOT NULL
);

create:
INSERT INTO MeasurementValue(createdAt, updatedAt, value, typeId, entryId)
VALUES (?, ?, ?, ?, ?);

getLastId:
SELECT last_insert_rowid();

getByEntry:
SELECT * FROM MeasurementValue WHERE entryId = ?;

getByDateRange:
SELECT * FROM MeasurementValue
INNER JOIN MeasurementType ON MeasurementType.id == MeasurementValue.typeId
INNER JOIN MeasurementUnit ON MeasurementUnit.id == MeasurementType.selectedUnitId
INNER JOIN MeasurementCategory ON MeasurementCategory.id == MeasurementType.propertyId
INNER JOIN Entry ON Entry.id == MeasurementValue.entryId
WHERE Entry.dateTime >= :startDateTime AND Entry.dateTime <= :endDateTime ORDER BY Entry.dateTime;

getLatestByProperty:
SELECT * FROM MeasurementValue
INNER JOIN MeasurementType ON MeasurementType.id == MeasurementValue.typeId
INNER JOIN MeasurementUnit ON MeasurementUnit.id == MeasurementType.selectedUnitId
INNER JOIN MeasurementCategory ON MeasurementCategory.id == MeasurementType.propertyId
INNER JOIN Entry ON Entry.id == MeasurementValue.entryId
WHERE MeasurementType.propertyId == :propertyId
ORDER BY Entry.dateTime DESC
LIMIT 1;

getPropertyAndDateTime:
SELECT * FROM MeasurementValue
INNER JOIN MeasurementType ON MeasurementType.id == MeasurementValue.typeId
INNER JOIN MeasurementUnit ON MeasurementUnit.id == MeasurementType.selectedUnitId
INNER JOIN MeasurementCategory ON MeasurementCategory.id == MeasurementType.propertyId
INNER JOIN Entry ON Entry.id == MeasurementValue.entryId
WHERE MeasurementType.propertyId == :propertyId
AND Entry.dateTime >= :minDateTime
AND Entry.dateTime <= :maxDateTime;

getAverageByProperty:
SELECT AVG(MeasurementValue.value) FROM MeasurementValue
INNER JOIN MeasurementType ON MeasurementType.id == MeasurementValue.typeId
INNER JOIN MeasurementUnit ON MeasurementUnit.id == MeasurementType.selectedUnitId
INNER JOIN MeasurementCategory ON MeasurementCategory.id == MeasurementType.propertyId
INNER JOIN Entry ON Entry.id == MeasurementValue.entryId
WHERE MeasurementType.propertyId == :propertyId
AND Entry.dateTime >= :minDateTime
AND Entry.dateTime <= :maxDateTime;

countByProperty:
SELECT COUNT(*) FROM MeasurementValue
INNER JOIN MeasurementType ON MeasurementType.id == MeasurementValue.typeId
INNER JOIN MeasurementCategory ON MeasurementCategory.id == MeasurementType.propertyId
INNER JOIN Entry ON Entry.id == MeasurementValue.entryId
WHERE MeasurementType.propertyId == :propertyId;

countByType:
SELECT COUNT(*) FROM MeasurementValue
WHERE typeId == :typeId;

update:
UPDATE MeasurementValue SET updatedAt = ?, value = ? WHERE id = ?;

deleteById:
DELETE FROM MeasurementValue WHERE id = ?;